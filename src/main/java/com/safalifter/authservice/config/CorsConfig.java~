package com.safalifter.authservice.config;


import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
import org.springframework.web.filter.CorsFilter;

import java.util.Arrays;

@Configuration
public class CorsConfig {

    @Value("${cors.allowed.origins}")
    private String allowedOrigins;

    @Bean
    public CorsFilter corsFilter() {
        CorsConfiguration config = new CorsConfiguration();
        config.setAllowedOrigins(Arrays.asList(allowedOrigins.split(","))); // Allow all origins
        config.setAllowedHeaders(Arrays.asList("Access-Control-*, Origin, X-Requested-With, Content-Type, Accept"));
        config.setExposedHeaders(Arrays.asList("Access-Control-*"));
        config.setAllowedMethods(Arrays.asList("GET", "POST", "PUT", "DELETE", "OPTIONS", "HEAD"));
        config.setAllowCredentials(true); // Allow credentials if needed

        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        source.registerCorsConfiguration("/**", config);

        return new CorsFilter(source);
    }
//    @Bean
//    public WebMvcConfigurer corsConfigurer() {
//        return new WebMvcConfigurer() {
//            @Override
//            public void addCorsMappings(CorsRegistry registry) {
//                registry.addMapping("/**").allowedOrigins(allowedOrigins.split(","))  // Change "*" to a specific origin if needed
//                        .allowedMethods("GET", "POST", "PUT", "DELETE", "OPTIONS").allowedHeaders("*").allowCredentials(true);
//            }
//        };
//    }

//    @Bean
//    public FilterRegistrationBean<RemoveVaryHeaderFilter> removeVaryHeaderFilter() {
//        FilterRegistrationBean<RemoveVaryHeaderFilter> registrationBean = new FilterRegistrationBean<>();
//        registrationBean.setFilter(new RemoveVaryHeaderFilter());
//        registrationBean.addUrlPatterns("/*"); // Apply to all URLs
//        registrationBean.setOrder(0); // Ensure the filter is registered early
//
//        return registrationBean;
//    }
}